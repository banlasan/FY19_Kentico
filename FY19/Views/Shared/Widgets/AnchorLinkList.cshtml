@using Kentico.PageBuilder.Web.Mvc
@using FY19.Models.Widgets
@using FY19.Models.InlineEditors
@using System.Text.RegularExpressions;
@model ComponentViewModel<KMJ_AnchorLinkListProperties>

@functions
{
    private static string HtmlToPlainText(string html)
    {
        const string tagWhiteSpace = @"(>|$)(\W|\n|\r)+<";//matches one or more (white space or line breaks) between '>' and '<'
        const string stripFormatting = @"<[^>]*(>|$)";//match any character between '<' and '>', even when end tag is missing
        const string lineBreak = @"<(br|BR)\s{0,1}\/{0,1}>";//matches: <br>,<br/>,<br />,<BR>,<BR/>,<BR />
        var lineBreakRegex = new Regex(lineBreak, RegexOptions.Multiline);
        var stripFormattingRegex = new Regex(stripFormatting, RegexOptions.Multiline);
        var tagWhiteSpaceRegex = new Regex(tagWhiteSpace, RegexOptions.Multiline);

        var text = html;
        //Decode html specific characters
        text = System.Net.WebUtility.HtmlDecode(text);
        //Remove tag whitespace/line breaks
        text = tagWhiteSpaceRegex.Replace(text, "><");
        //Replace <br /> with line breaks
        text = lineBreakRegex.Replace(text, Environment.NewLine);
        //Strip formatting
        text = stripFormattingRegex.Replace(text, string.Empty);

        return text;
    }

}

@{
    string text1, text2, text3, text4, text5, text6, text7, text8, text9, text10;
    string url1, url2, url3, url4, url5, url6, url7, url8, url9, url10;
    string className = Model.Properties.Class; // "anchorLinkClass";
    string id = Model.Properties.Id; // "anchorLinkId";

    //list 1
    text1 = (Model.Properties.Text1 != null) ? (Model.Properties.Text1.Length > 200 ? Model.Properties.Text1.Substring(0, 200) : Model.Properties.Text1) : (null);
    url1 = (Model.Properties.Url1 != null) ? (Model.Properties.Url1.Length > 992 ? Model.Properties.Url1.Substring(0, 992) : Model.Properties.Url1) : (null);

    //list 2
    text2 = (Model.Properties.Text2 != null) ? (Model.Properties.Text2.Length > 200 ? Model.Properties.Text2.Substring(0, 200) : Model.Properties.Text2) : (null);
    url2 = (Model.Properties.Url2 != null) ? (Model.Properties.Url2.Length > 992 ? Model.Properties.Url2.Substring(0, 992) : Model.Properties.Url2) : (null);

    //list3
    text3 = (Model.Properties.Text3 != null) ? (Model.Properties.Text3.Length > 200 ? Model.Properties.Text3.Substring(0, 200) : Model.Properties.Text3) : (null);
    url3 = (Model.Properties.Url3 != null) ? (Model.Properties.Url3.Length > 992 ? Model.Properties.Url3.Substring(0, 992) : Model.Properties.Url3) : (null);

    //list4
    text4 = (Model.Properties.Text4 != null) ? (Model.Properties.Text4.Length > 200 ? Model.Properties.Text4.Substring(0, 200) : Model.Properties.Text4) : (null);
    url4 = (Model.Properties.Url4 != null) ? (Model.Properties.Url4.Length > 992 ? Model.Properties.Url4.Substring(0, 992) : Model.Properties.Url4) : (null);

    //list5
    text5 = (Model.Properties.Text5 != null) ? (Model.Properties.Text5.Length > 200 ? Model.Properties.Text5.Substring(0, 200) : Model.Properties.Text5) : (null);
    url5 = (Model.Properties.Url5 != null) ? (Model.Properties.Url5.Length > 992 ? Model.Properties.Url5.Substring(0, 992) : Model.Properties.Url5) : (null);

    //list6
    text6 = (Model.Properties.Text6 != null) ? (Model.Properties.Text6.Length > 200 ? Model.Properties.Text6.Substring(0, 200) : Model.Properties.Text6) : (null);
    url6 = (Model.Properties.Url6 != null) ? (Model.Properties.Url6.Length > 992 ? Model.Properties.Url6.Substring(0, 992) : Model.Properties.Url6) : (null);

    //list7
    text7 = (Model.Properties.Text7 != null) ? (Model.Properties.Text7.Length > 200 ? Model.Properties.Text7.Substring(0, 200) : Model.Properties.Text7) : (null);
    url7 = (Model.Properties.Url7 != null) ? (Model.Properties.Url7.Length > 992 ? Model.Properties.Url7.Substring(0, 992) : Model.Properties.Url7) : (null);

    //list8
    text8 = (Model.Properties.Text8 != null) ? (Model.Properties.Text8.Length > 200 ? Model.Properties.Text8.Substring(0, 200) : Model.Properties.Text8) : (null);
    url8 = (Model.Properties.Url8 != null) ? (Model.Properties.Url8.Length > 992 ? Model.Properties.Url8.Substring(0, 992) : Model.Properties.Url8) : (null);

    //list9
    text9 = (Model.Properties.Text9 != null) ? (Model.Properties.Text9.Length > 200 ? Model.Properties.Text9.Substring(0, 200) : Model.Properties.Text9) : (null);
    url9 = (Model.Properties.Url9 != null) ? (Model.Properties.Url9.Length > 992 ? Model.Properties.Url9.Substring(0, 992) : Model.Properties.Url9) : (null);

    //list10
    text10 = (Model.Properties.Text10 != null) ? (Model.Properties.Text10.Length > 200 ? Model.Properties.Text10.Substring(0, 200) : Model.Properties.Text10) : (null);
    url10 = (Model.Properties.Url10 != null) ? (Model.Properties.Url10.Length > 992 ? Model.Properties.Url10.Substring(0, 992) : Model.Properties.Url10) : (null);
}


<ul class="listInternalLink @if (id != null) { @className; }" id="@id">

    @if (text1 != null)
    {
        <li>@if (url1 != null)
            {
                <a href="@url1" target="_blank">@Html.Raw(HttpUtility.HtmlDecode(text1.Replace(Environment.NewLine, "<br/>")))</a>
            }
            else
            {
                @text1
            }</li>
    }

    @if (text2 != null)
    {
        <li>@if (url2 != null)
            {
                <a href="@url2" target="_blank">@Html.Raw(HttpUtility.HtmlDecode(text2.Replace(Environment.NewLine, "<br />")))</a>
            }
            else
            {
                @text2
            }</li>
    }

    @if (text3 != null)
    {
        <li>@if (url3 != null)
            {
                <a href="@url3" target="_blank">@Html.Raw(HttpUtility.HtmlDecode(text3.Replace(Environment.NewLine, "<br />")))</a>
            }
            else
            {
                @text3
            }</li>
    }

    @if (text4 != null)
    {
        <li>@if (url4 != null)
            {
                <a href="@url4" target="_blank">@Html.Raw(HttpUtility.HtmlDecode(text4.Replace(Environment.NewLine, "<br />")))</a>
            }
            else
            {
                @text4
            }</li>
    }

    @if (text5 != null)
    {
        <li>@if (url5 != null)
            {
                <a href="@url5" target="_blank">@Html.Raw(HttpUtility.HtmlDecode(text5.Replace(Environment.NewLine, "<br />")))</a>
            }
            else
            {
                @text5
            }</li>
    }

    @if (text6 != null)
    {
        <li>@if (url6 != null)
            {
                <a href="@url6" target="_blank">@Html.Raw(HttpUtility.HtmlDecode(text6.Replace(Environment.NewLine, "<br />")))</a>
            }
            else
            {
                @text6
            }</li>
    }

    @if (text7 != null)
    {
        <li>@if (url7 != null)
            {
                <a href="@url7" target="_blank">@Html.Raw(HttpUtility.HtmlDecode(text7.Replace(Environment.NewLine, "<br />")))</a>
            }
            else
            {
                @text7
            }</li>
    }

    @if (text8 != null)
    {
        <li>@if (url8 != null)
            {
                <a href="@url8" target="_blank">@Html.Raw(HttpUtility.HtmlDecode(text8.Replace(Environment.NewLine, "<br />")))</a>
            }
            else
            {
                @text8
            }</li>
    }

    @if (text9 != null)
    {
        <li>@if (url9 != null)
            {
                <a href="@url9" target="_blank">@Html.Raw(HttpUtility.HtmlDecode(text9.Replace(Environment.NewLine, "<br />")))</a>
            }
            else
            {
                @text9
            }</li>
    }

    @if (text10 != null)
    {
        <li>@if (url10 != null)
            {
                <a href="@url10" target="_blank">@Html.Raw(HttpUtility.HtmlDecode(text10.Replace(Environment.NewLine, "<br />")))</a>
            }
            else
            {
                @text10
            }</li>
    }
</ul>